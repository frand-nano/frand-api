server {
    listen ${NGINX_HTTP_PORT};

    # HTTP -> HTTPS 리다이렉션
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen ${NGINX_HTTPS_PORT} ssl;
    http2 on;

    # TLS 설정
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # API 프록시 설정
    location ${ROCKET_API_ENDPOINT}/ {
        proxy_pass http://api:${ROCKET_PORT}${ROCKET_API_ENDPOINT}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 90s;
    }

    # favicon.ico 설정
    location = /favicon.ico {
        alias /usr/share/nginx/static/favicon.ico;
        access_log off;
        expires max;
        add_header Cache-Control "public, max-age=31536000";
    }

    # 정적 파일용 경로 추가
    location /static/ {
        alias /usr/share/nginx/static/;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }

    # 로깅
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}